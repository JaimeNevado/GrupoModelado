model P2

-----------clases-------------

class Taller
end

class TallerOficial < Taller
attributes
garantiaDeTiempo : Integer
end

class Viaje
attributes
fechaSalida : Integer
fechaLlegada : Integer 
numKmTotales : Integer derive : (self.formadoPor.numKm)
end

class Ciudad
end

class Revision
attributes
fechaInicio : Integer
fechaFin : Integer
end

class Coche < ActiveObject
attributes
fechaMatriculacion : Integer
garantia : Boolean
mantenimiento : Boolean
numKmRecorridos : Real
end

class Clock
attributes
NOW : Integer
end

abstract class ActiveObject
    operations
        tick()
end


----------relaciones-------------

association Time between
    Clock [1] role clock
    ActiveObject [*] role ao ordered
end    

association Ubicacion between
    Taller [*] role talleres
    Ciudad [1] role estaEn
end

association revisionTaller between
    Taller [1] role ocurre
    Revision [*] role tieneLugar
end

association estacionado between
    Coche [*] role ubicadoEn
    Ciudad [0..1] role aparcado
end

association revisionCoche between
    Revision [*] role revisiones
    Coche [1] role enRevision
end

association viaje between
    Coche [*] role coches
    Viaje [*] role viajes
end

association ruta between
    Recorrido [1] role formadoPor
    Viaje [*] role esParteDe
end




--------fin de relaciones-------------
-----------clases de asociacion-------------

associationclass Recorrido between
  Ciudad [*] role destino
  Ciudad [*] role salida
attributes
numKm : Integer 
    init = 5
end



-----------Invariantes---------

-- 1. (este puede ser redundante) Distancia minima entre ciudades 5 km


--4. Fecha inicio revision >= fecha de matriculación

--5. Solo una revision en cada momento

--7. si coche esta en revision, la localización del coche debe ser la misma que la localización del taller que lo está revisando

--8. Si el coche está viajando, tenemos fecha de salida pero no de llegada (null)

--9. El coche está o viajando o en ciudad

--10 y 12. Si el numero de viajes del coche es >= 1 y no está viajando, entonces debe estar en la última ciudad que llegó

--11. La fecha de inicio de viaje2 debe ser >= que la fecha de fin del viaje1 siempre y cuand vel viaje1 ya haya acabado (viaje1.finViaje ! = null)

--15. Esta en Garantia si (now - fechaMatriculacion <= 400 días) y (now - fechaFinTaller <= garantíaTaller)

--16. NO esta en Mantenimiento si (now - fechaMatriculacion <= 400) y SI necesita mantenimiento si (now - fechaFinTaller >= 100)